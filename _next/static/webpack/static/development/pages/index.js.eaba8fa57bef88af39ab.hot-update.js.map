{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.eaba8fa57bef88af39ab.hot-update.js","sources":["webpack:///./components/App.js"],"sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\nimport Header from \"./header/header\";\r\nimport BackgroundContainer from \"./background-container/backgroundContainer\";\r\nimport BackgroundContainerReverted\r\n  from \"./background-container/backgroundContainerReverted\";\r\nimport ContentContainer from \"./content-container/contentContainer\";\r\nimport Footer from \"./footer/Footer\";\r\nimport SyntaxHighlighter from '../node_modules/react-syntax-highlighter';\r\nimport {dracula} from '../node_modules/react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst sampleControllerCode = `\r\n import {Controller, Get} from \"rokkit.ts-web\";\r\n\r\n @Controller(\"/hello\")\r\n export class MyController {\r\n\r\n   @Get(\"/\")\r\n   public getHello(): string {\r\n     return \"Hello World, it's Rokkit.ts!\"\r\n   }\r\n }\r\n`;\r\n\r\nconst sampleConfiguration = `\r\n /* config.json -- main config file */\r\n {\r\n    \"server\": {\r\n      \"name\": \"MyRokkit.ts Project\"\r\n    },\r\n    environment: {\r\n      \"active\": \"dev\"\r\n    }\r\n }\r\n \r\n /* config-dev.json -- config file for development */\r\n {\r\n    server: {\r\n      \"port\": 8080,\r\n      \"adapter\": \"express\"\r\n    }\r\n }\r\n /* config-prod.json -- config file for production */\r\n {\r\n    server: {\r\n      \"port\": 8080,\r\n      \"adapter\": \"express\"\r\n    }\r\n }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <Header/>\r\n        <BackgroundContainer highlight=\"Rokkit.ts\"/>\r\n        <ContentContainer>\r\n          <div className=\"attribute-box\">\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Focused</h2>\r\n              <p>Rokkit focuses on major microservices attributes:</p>\r\n              <ul className=\"highlight-list\">\r\n                <li>Communication</li>\r\n                <li>Resilience</li>\r\n                <li>Scalability</li>\r\n                <li>Performance</li>\r\n                <li>Technical independence</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Modulized</h2>\r\n              <p>Rokkit.ts is separated into modules to reduce the build size\r\n                and deliver the perfect application, instead of rely on unused\r\n                dependencies. Each module of Rokkit.ts can be used independently\r\n                or combined by the Rokkit Core.<br/>\r\n                Rokkits comes with 5 modules:\r\n              </p>\r\n              <p className=\"text-color-pink\">Core,&nbsp;\r\n                Web,&nbsp;\r\n                Messaging,&nbsp;\r\n                Data,&nbsp;\r\n                Logging & Monitoring\r\n              </p>\r\n\r\n            </div>\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">TypeScript</h2>\r\n              <p>\r\n                Rokkit.ts is written for TypeScript.<br/>\r\n                We use TypeScript to ensure type safeness and\r\n                empower developers in their application.<br/>\r\n                TypeScript enables us to detect types error during development\r\n                and provides safeness in production.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </ContentContainer>\r\n        <BackgroundContainerReverted highlight=\"Easy to Develop\"/>\r\n        <ContentContainer>\r\n          <div className=\"attribute-box\">\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Annotation based development</h2>\r\n              <p>\r\n                Rokkit's features are primary used by annotations.<br/>\r\n                Annotations keeps your code clean and deliver maximal\r\n                functionality!\r\n              </p>\r\n              <SyntaxHighlighter className=\"syntax-hl\" language=\"typescript\"\r\n                                 style={dracula}>\r\n                {sampleControllerCode}\r\n              </SyntaxHighlighter>\r\n            </div>\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Conditional configuration</h2>\r\n              <p>\r\n                Rokkit.ts can be configured for multiple environments.\r\n              </p>\r\n              <SyntaxHighlighter className=\"syntax-hl\" language=\"json\"\r\n                                 style={dracula}>\r\n                {sampleConfiguration}\r\n              </SyntaxHighlighter>\r\n\r\n            </div>\r\n          </div>\r\n        </ContentContainer>\r\n        <BackgroundContainer highlight=\"Fast & Resource saving\"/>\r\n        <ContentContainer>\r\n          <div className=\"attribute-box\">\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Fast start up</h2>\r\n              <p>Microservices need to scale up fast, when necessary due to load\r\n                peaks or failures of other instances. Rokkit.ts is designed to\r\n                start up fast and take requests as early as possible. Only\r\n                needed\r\n                modules and components will be started by Rokkit.ts.</p>\r\n            </div>\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Low memory consumption</h2>\r\n              <p>\r\n                Rokkit.ts will not consume unnecessary amounts of memory.\r\n                Rokkit.ts will manage class instances and tries to reuse as many\r\n                instances as possible. Beside the framework Node.js offers a\r\n                high-performing runtime with low memory consumption.\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n        </ContentContainer>\r\n        <BackgroundContainerReverted highlight=\"Diverse\"/>\r\n        <ContentContainer>\r\n          <div className=\"attribute-box\">\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Use diverse frameworks</h2>\r\n              <p> Rokkit.ts is designed to plug in diverse frameworks. Such as\r\n                HTTP-Server frameworks. The are default adapter which are\r\n                shipped with the framework. For example default adapters for\r\n                Express.js and Restify contained within the http-module. Each\r\n                module could provide several default adapters.\r\n                The users could also develop their own adapters for any\r\n                framework they like to.\r\n              </p>\r\n            </div>\r\n            <div className=\"attribute-text\">\r\n              <h2 className=\"text-color-pink\">Polyglot Runtimes</h2>\r\n              <p> Rokkit.ts is originally planned for Node.js, but the upcoming\r\n                development of Deno, the new TypeScript runtime by Ryan Dahl the\r\n                creator of Node.js.\r\n                The project is interesting and should be focused in the near\r\n                future!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </ContentContainer>\r\n        <Footer/>\r\n      </div>\r\n  )\r\n      ;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAasourceRoot":""}